
26  Write a PL/SQL code to calculate tax for an employee of an organization ABC and to display his/her name & tax, by creating a table under employee database as below:
Employee_salary(emp_no,basic,HRA,DA,Total_deduction,net_salary,gross_Salary)
-- Step 1: Create the Table

CREATE TABLE Employee_salary (
    emp_no INT PRIMARY KEY,
    basic DECIMAL(10, 2),
    HRA DECIMAL(10, 2),
    DA DECIMAL(10, 2),
    Total_deduction DECIMAL(10, 2),
    net_salary DECIMAL(10, 2),
    gross_salary DECIMAL(10, 2)
);

-- Step 2: Insert 3+ Records into the Table
INSERT INTO Employee_salary (emp_no, basic, HRA, DA, Total_deduction, net_salary, gross_salary) VALUES
(101, 30000, 6000, 4500, 2000, (30000+6000+4500-2000), (30000+6000+4500)),
(102, 40000, 8000, 6000, 3000, (40000+8000+6000-3000), (40000+8000+6000)),
(103, 25000, 5000, 3000, 1500, (25000+5000+3000-1500), (25000+5000+3000)),
(104, 35000, 7000, 5200, 2800, (35000+7000+5200-2800), (35000+7000+5200));


commit;

CREATE procedure tax as
  taxNum DECIMAL(10 , 2);
   
begin
  for emp in (SELECT * from Employee_salary) loop
    taxNum := emp.gross_salary * 0.1;
    
    update Employee_salary
    set Total_deduction = taxNum
    where emp_no = emp.emp_no;
  
  end loop;
end;
/

begin
  tax;
end;
/

SELECT * from Employee_salary;



7 Write PL/SQL Procedure & function to find class [Distinction (Total marks from 1499 to 990) 
,First Class( 899 to 900) Higher Second (899 to 825) 
,Second,Pass (824 to 750) ] of a student based on total
 marks from table Student (rollno, name, Marks1, Marks2, Marks3,
  Marks4, Marks5). 
  
DELIMITER //

CREATE PROCEDURE categorizeclass()
BEGIN
  DECLARE u, v, w, x, y, total_marks INT;
  DECLARE rollno INT;
  DECLARE finished INT DEFAULT 0;
  DECLARE student_cursor CURSOR FOR 
    SELECT rollno, Marks1, Marks2, Marks3, Marks4, Marks5 FROM Student;
  DECLARE CONTINUE HANDLER FOR NOT FOUND SET finished = 1;

  -- Clean previous results
  DELETE FROM Result;

  OPEN student_cursor;

  read_loop: LOOP
    FETCH student_cursor INTO rollno, u, v, w, x, y;
    IF finished = 1 THEN 
      LEAVE read_loop;
    END IF;

    -- Check marks validity
    IF u < 0 OR v < 0 OR w < 0 OR x < 0 OR y < 0 OR
       u > 300 OR v > 300 OR w > 300 OR x > 300 OR y > 300 THEN
      SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = CONCAT('Invalid marks for rollno ', rollno);
    ELSE
      SET total_marks = u + v + w + x + y;
      
      IF total_marks BETWEEN 990 AND 1499 THEN
        INSERT INTO Result (RollNo, total_marks, class) VALUES (rollno, total_marks, 'Distinction');
      ELSEIF total_marks BETWEEN 900 AND 989 THEN
        INSERT INTO Result (RollNo, total_marks, class) VALUES (rollno, total_marks, 'First Class');
      ELSEIF total_marks BETWEEN 825 AND 899 THEN
        INSERT INTO Result (RollNo, total_marks, class) VALUES (rollno, total_marks, 'Higher Second');
      ELSEIF total_marks BETWEEN 750 AND 824 THEN
        INSERT INTO Result (RollNo, total_marks, class) VALUES (rollno, total_marks, 'Second');
      ELSE
        INSERT INTO Result (RollNo, total_marks, class) VALUES (rollno, total_marks, 'Pass');
      END IF;
    END IF;

  END LOOP;

  CLOSE student_cursor;
  
  -- Optional: display the summary counts per class
  SELECT class, COUNT(*) AS count FROM Result GROUP BY class;

END;
//

DELIMITER ;


29  Writ a PL/SQL procedure to find the number of students ranging from 100-70%, 69-60%, 59-50% & below 49% in each course from the student_course table given by the procedure as parameter.
Schema: Student (ROLL_NO ,COURSE, COURSE_COD ,SEM ,TOTAL_MARKS, PERCENTAGE)

CREATE PROCEDURE CalculatePercentageRanges (p_course VARCHAR) AS
    v_100_70 NUMBER;
    v_69_60 NUMBER;
    -- ... variables
BEGIN
    SELECT COUNT(*) INTO v_100_70 FROM Student 
    WHERE course = p_course AND percentage BETWEEN 70 AND 100;

    -- Similarly for other ranges
    -- Output results
END;