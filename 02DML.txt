Q13 Create the instance of the COMPANY which consists of the following tables:
EMPLOYEE(Fname, Minit, Lname, Ssn, Bdate, Address, Sex, Salary,  Dno)
DEPARTEMENT(Dname, Dno, Mgr_ssn, Mgr_start_date)
DEPT_LOCATIONS(Dnumber, Dlocation)
PROJECT(Pname, Pnumber, Plocation, Dno)
WORKS_ON(Essn, Pno, Hours)
DEPENDENT(Essn, Dependent_name, Sex, Bdate, Relationship)


```sql
CREATE TABLE EMPLOYEE (
    Fname VARCHAR(50),
    Minit CHAR(1),
    Lname VARCHAR(50),
    Ssn INT PRIMARY KEY,
    Bdate DATE,
    Address VARCHAR(255),
    Sex CHAR(1),
    Salary DECIMAL(10,2),
    Dno INT REFERENCES DEPARTMENT(Dno)
);

CREATE TABLE DEPARTMENT (
    Dname VARCHAR(100),
    Dno INT PRIMARY KEY,
    Mgr_ssn INT REFERENCES EMPLOYEE(Ssn),
    Mgr_start_date DATE
);

CREATE TABLE DEPT_LOCATIONS (
    Dnumber INT REFERENCES DEPARTMENT(Dno),
    Dlocation VARCHAR(255)
);

CREATE TABLE PROJECT (
    Pname VARCHAR(100),
    Pnumber INT PRIMARY KEY,
    Plocation VARCHAR(255),
    Dno INT REFERENCES DEPARTMENT(Dno)
);

CREATE TABLE WORKS_ON (
    Essn INT REFERENCES EMPLOYEE(Ssn),
    Pno INT REFERENCES PROJECT(Pnumber),
    Hours DECIMAL(5,2),
    PRIMARY KEY (Essn, Pno)
);

CREATE TABLE DEPENDENT (
    Essn INT REFERENCES EMPLOYEE(Ssn),
    Dependent_name VARCHAR(100),
    Sex CHAR(1),
    Bdate DATE,
    Relationship VARCHAR(50),
    PRIMARY KEY (Essn, Dependent_name)
);
```

---

### **Executing Queries**

#### **1. Retrieve project details for 'Stafford'**
```sql
SELECT P.Pnumber, P.Dno, E.Lname, E.Address, E.Bdate
FROM PROJECT P
JOIN DEPARTMENT D ON P.Dno = D.Dno
JOIN EMPLOYEE E ON D.Mgr_ssn = E.Ssn
WHERE P.Plocation = 'Stafford';
```

---

#### **2. List all project numbers involving employees with last name 'Smith'**
```sql
SELECT DISTINCT P.Pnumber
FROM PROJECT P
LEFT JOIN DEPARTMENT D ON P.Dno = D.Dno
LEFT JOIN EMPLOYEE E ON D.Mgr_ssn = E.Ssn
LEFT JOIN WORKS_ON W ON W.Pno = P.Pnumber
LEFT JOIN EMPLOYEE E2 ON W.Essn = E2.Ssn
WHERE E.Lname = 'Smith' OR E2.Lname = 'Smith';
```

---

#### **3. Retrieve all employees whose address is in Houston, Texas**
```sql
SELECT *
FROM EMPLOYEE
WHERE Address LIKE '%Houston, Texas%';
```

---

#### **4. Show new salaries if every employee working on 'ProductX' gets a 10% raise**
```sql
SELECT E.Ssn, E.Fname, E.Lname, E.Salary, 
       E.Salary * 1.10 AS NewSalary
FROM EMPLOYEE E
JOIN WORKS_ON W ON E.Ssn = W.Essn
JOIN PROJECT P ON W.Pno = P.Pnumber
WHERE P.Pname = 'ProductX';
```


Q14
Implement all SQL DML opeartions with  operators, functions, and set operator for given schema:
Account(Acc_no, branch_name,balance)
branch(branch_name,branch_city,assets)
customer(cust_name,cust_street,cust_city)
Depositor(cust_name,acc_no)
Loan(loan_no,branch_name,amount)
Borrower(cust_name,loan_no)

Solve following query:
1.	Find the average account balance at each branch
2.	Find no. of depositors at each branch.
3.	Find the branches where average account balance > 12000.
4.	Find number of tuples in customer relation.


### **Executing Queries**

#### **1. Find the average account balance at each branch**
We use **AVG()** function with **GROUP BY** to calculate the average balance per branch:

```sql
SELECT branch_name, AVG(balance) AS avg_balance
FROM Account
GROUP BY branch_name;
```

---

#### **2. Find the number of depositors at each branch**
We use **COUNT()** to count depositors at each branch, joining **Depositor** and **Account** tables:

```sql
SELECT A.branch_name, COUNT(D.cust_name) AS num_depositors
FROM Depositor D
JOIN Account A ON D.acc_no = A.acc_no
GROUP BY A.branch_name;
```

---

#### **3. Find the branches where the average account balance is greater than 12,000**
We filter branches where the **AVG(balance)** exceeds 12,000:

```sql
SELECT branch_name
FROM Account
GROUP BY branch_name
HAVING AVG(balance) > 12000;
```

---

#### **4. Find the number of tuples in the Customer relation**
We use **COUNT(*)** to get the total number of tuples (rows) in the **Customer** table:

```sql
SELECT COUNT(*) AS total_customers
FROM Customer;
```

---


31.Create database  :Citydetails(_id,name,area,population(total,Adults,seniorcitizens,sexratio), geography(avgtemp, avgrainfall, longitude, latitude))

1. Find the total population in pune.
2.  returns all city with total population greater than 10 million
3. returns the average populations for each city.
4.  returns the minimum and maximum cities by population for each city.



32.Create database  :Citydetails(_id,name,area,population(total,Adults,seniorcitizens,sexratio), geography (avgtemp, avgrainfall, longitude, latitude))


1.	Find area wise total population and sort them in increasing order.
2.	Retrieve name and area where average rain fall is greater than 60
3.	Create index on city and area find the max population in Mumbai
4.	Create index on name.



